<?xml version="1.0" encoding="UTF-8"?>
<!-- | Copyright 2015 Adobe Systems Incorporated | | Licensed under the Apache 
	License, Version 2.0 (the "License"); | you may not use this file except 
	in compliance with the License. | You may obtain a copy of the License at 
	| | http://www.apache.org/licenses/LICENSE-2.0 | | Unless required by applicable 
	law or agreed to in writing, software | distributed under the License is 
	distributed on an "AS IS" BASIS, | WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. | See the License for the specific language 
	governing permissions and | limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.cognifide.demo</groupId>
		<artifactId>slice-demo</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>slice-demo.core</artifactId>
	<packaging>bundle</packaging>
	<name>Slice Demo - Core</name>
	<description>Core bundle for Slice Demo</description>
	<properties>
		<slice.version>4.3.1</slice.version>
		<slice.cq-addon.version>1.2.0</slice.cq-addon.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<!-- Slice required bundle manifestation -->
						<Export-Package>com.cognifide.demo.slice.demo.core.*;version="${project.version}"</Export-Package>
						<Bundle-Activator>com.cognifide.demo.slice.demo.core.activator.Activator</Bundle-Activator>
						<Bundle-SymbolicName>slice-demo-app</Bundle-SymbolicName>
						<!-- End Of Slice required bundle manifestation -->
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- Development profile: install only the bundle -->
		<profile>
			<id>autoInstallBundle</id>
			<activation>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.sling</groupId>
						<artifactId>maven-sling-plugin</artifactId>
						<configuration>
							<!-- Note that this requires /apps/slicedemo/install to exist!! -->
							<!-- This is typically the case when ui.apps is deployed first -->
							<!-- Otherwise, create /apps/slicedemo/install manually (CRXDE|Lite) -->
							<slingUrlSuffix>/apps/slicedemo/install/</slingUrlSuffix>
							<failOnError>true</failOnError>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<!-- Cognifide Slice Framework dependencies -->
		<dependency>
			<groupId>com.cognifide.slice</groupId>
			<artifactId>slice-core-api</artifactId>
			<version>${slice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cognifide.slice</groupId>
			<artifactId>slice-core</artifactId>
			<version>${slice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cognifide.slice</groupId>
			<artifactId>slice-mapper</artifactId>
			<version>${slice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cognifide.slice</groupId>
			<artifactId>slice-mapper-api</artifactId>
			<version>${slice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cognifide.slice-addon</groupId>
			<artifactId>slice-aem60</artifactId>
			<version>${slice.cq-addon.version}</version>
		</dependency>

		<!-- OSGi Dependencies -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
		</dependency>
		<!-- Other Dependencies -->
		<dependency>
			<groupId>com.adobe.aem</groupId>
			<artifactId>aem-api</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
	</dependencies>
</project>
